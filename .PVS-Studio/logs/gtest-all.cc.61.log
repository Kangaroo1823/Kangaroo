{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class GTEST_API_ RE {","falseAlarm":false,"level":2,"message":"The 'RE' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[891]}],"prevLine":"// Regular Expression syntax."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ThreadWithParam() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[1482]}],"prevLine":"      : ThreadWithParamBase(new RunnableImpl(func, param), thread_can_start) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  FilePath() : pathname_(\"\") {}","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'pathname_(\"\")' with 'pathname_()'.","nextLine":"  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) {}","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-filepath.h","lines":[66]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"    registered_tests_.insert(","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"        ::std::make_pair(test_name, CodeLocation(file, line)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[611]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    registered_tests_.insert(","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'registered_tests_' container. Consider replacing methods: 'insert' -> 'emplace'.","nextLine":"        ::std::make_pair(test_name, CodeLocation(file, line)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[611]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V783","currLine":"    return it->second;","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator 'it' might take place.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[623]}],"prevLine":"    GTEST_CHECK_(it != registered_tests_.end());","sastId":"CERT-CTR51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V802","currLine":"class NativeArray {","falseAlarm":false,"level":2,"message":"On 32-bit platform, structure size can be reduced from 24 to 16 bytes by rearranging the fields according to their sizes in decreasing order.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[1097]}],"prevLine":"template <typename Element>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class NativeArray {","falseAlarm":false,"level":2,"message":"The 'NativeArray' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[1097]}],"prevLine":"template <typename Element>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  explicit Matcher() {}  // NOLINT","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[504]}],"prevLine":"  // cannot use it until a valid value has been assigned to it."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[533]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[555]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[583]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[609]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  TestPartResultArray() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-test-part.h","lines":[134]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ParamIteratorInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"  // A pointer to the base generator instance.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[97]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ParamGeneratorInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[171]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~RangeGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[215]}],"prevLine":"        end_index_(CalculateEndIndex(begin, end, step)) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class RangeGenerator : public ParamGeneratorInterface<T> {","falseAlarm":false,"level":3,"message":"The copy assignment operator is declared as private in the 'RangeGenerator' class, but the default copy constructor will still be generated by compiler. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[208]}],"prevLine":"template <typename T, typename IncrementT>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"  class Iterator : public ParamIteratorInterface<T> {","falseAlarm":false,"level":2,"message":"The copy constructor is declared as private in the 'Iterator' class, but the default copy assignment operator will still be generated by compiler. It is dangerous to use such a class.","nextLine":"   public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[311]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~ValuesInIteratorRangeGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[299]}],"prevLine":"      : container_(begin, end) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {","falseAlarm":false,"level":3,"message":"The copy assignment operator is declared as private in the 'ValuesInIteratorRangeGenerator' class, but the default copy constructor will still be generated by compiler. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[294]}],"prevLine":"template <typename T>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~TestMetaFactoryBase() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[420]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  TestMetaFactory() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[439]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V824","currLine":"    tests_.push_back(std::shared_ptr<TestInfo>(new TestInfo(","falseAlarm":false,"level":1,"message":"It is recommended to use the 'make_shared' function to create smart pointers.","nextLine":"        test_suite_name, test_base_name, meta_factory, code_location)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[532]}],"prevLine":"                      CodeLocation code_location) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    instantiations_.push_back(","falseAlarm":false,"level":1,"message":"Decreased performance. Object may be created in-place in the 'instantiations_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        InstantiationInfo(instantiation_name, func, name_func, file, line));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[541]}],"prevLine":"                                const char* file, int line) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ParameterizedTestSuiteRegistry() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"  ~ParameterizedTestSuiteRegistry() {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[691]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~CartesianProductGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[830]}],"prevLine":"      : generators_(g) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"    ~IteratorImpl() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[855]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~WithParamInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest.h","lines":[1656]}],"prevLine":"  typedef T ParamType;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V601","currLine":"  AssertionResult negation(!success_);","cwe":704,"falseAlarm":false,"level":2,"message":"The bool type is implicitly cast to the class type.","nextLine":"  if (message_.get() != nullptr) negation << *message_;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-assertion-result.cc","lines":[62]}],"prevLine":"AssertionResult AssertionResult::operator!() const {","sastId":"CERT-INT36-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __builtin_va_list va_list;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'va_list' type. The system header file should be used: #include <STDARG.H> or <CRTDEFS.H>.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_list.h","lines":[12]}],"prevLine":"#define _VA_LIST","sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V659","currLine":"  const std::vector<TraceInfo>& gtest_trace_stack() const {","falseAlarm":false,"level":3,"message":"Declarations of functions with 'gtest_trace_stack' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 770, 773.","nextLine":"    return gtest_trace_stack_.get();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-internal-inl.h","lines":[773,770]}],"prevLine":"  }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  if (GTEST_FLAG_GET(internal_run_death_test) == \"\") return nullptr;","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'str == \"\"' with 'str.empty()'.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-death-test.cc","lines":[1569]}],"prevLine":"InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V513","currLine":"    HANDLE thread_handle = ::CreateThread(","cwe":676,"falseAlarm":false,"level":3,"message":"Use _beginthreadex/_endthreadex functions instead of CreateThread/ExitThread functions.","nextLine":"        nullptr,  // Default security.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[430]}],"prevLine":"    DWORD thread_id;","sastId":"CERT-MSC24-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"          thread_to_thread_locals","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"              ->insert(std::make_pair(current_thread, ThreadLocalValues()))","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[505]}],"prevLine":"      thread_local_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"          thread_local_values","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"              .insert(std::make_pair(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[515]}],"prevLine":"      value_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"          thread_local_values","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'thread_local_values' container. Consider replacing methods: 'insert' -> 'emplace'.","nextLine":"              .insert(std::make_pair(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[515]}],"prevLine":"      value_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V572","currLine":"        reinterpret_cast<LPVOID>(new ThreadIdAndHandle(thread_id, thread)),","cwe":665,"falseAlarm":false,"level":2,"message":"It is odd that the object which was created using 'new' operator is immediately cast to another type.","nextLine":"        CREATE_SUSPENDED, &watcher_thread_id);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[603]}],"prevLine":"        &ThreadLocalRegistryImpl::WatcherThreadFunc,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V513","currLine":"    HANDLE watcher_thread = ::CreateThread(","cwe":676,"falseAlarm":false,"level":3,"message":"Use _beginthreadex/_endthreadex functions instead of CreateThread/ExitThread functions.","nextLine":"        nullptr,  // Default security.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[599]}],"prevLine":"    DWORD watcher_thread_id;","sastId":"CERT-MSC24-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"  const size_t len = strlen(regex);","cwe":628,"falseAlarm":false,"level":2,"message":"The 'regex' pointer was used unsafely after it was verified against nullptr. Check lines: 944, 954.","nextLine":"  // Reserves enough bytes to hold the regular expression used for a","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[954,944]}],"sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V769","currLine":"    *buffer++ = '^';  // Makes sure full_pattern_ starts with '^'.","cwe":119,"falseAlarm":false,"level":2,"message":"The 'buffer' pointer in the 'buffer ++' expression could be nullptr. In such case, resulting value will be senseless and it should not be used. Check lines: 962, 958.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[962,958]}],"prevLine":"  if (*regex != '^')","sastId":"CERT-EXP08-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"    posix::FClose(file);","cwe":628,"falseAlarm":false,"level":2,"message":"The 'file' pointer was used unsafely after it was verified against nullptr. Check lines: 1129, 1134.","nextLine":"    return content;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[1134,1129]}],"prevLine":"    const std::string content = ReadEntireFile(file);","sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V560","currLine":"      result != long_value","cwe":570,"falseAlarm":false,"level":2,"message":"A part of conditional expression is always false: result != long_value.","nextLine":"      // The parsed value overflows as an int32_t.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[1308]}],"prevLine":"      // LONG_MAX or LONG_MIN when the input overflows.)"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    name_vec.push_back(StripTrailingSpaces(GetPrefixUntilComma(src)));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'name_vec' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-typed-test.cc","lines":[50]}],"prevLine":"  for (; src != nullptr; src = SkipComma(src)) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  if (errors_str != \"\") {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'errors_str != \"\"' with '!errors_str.empty()'.","nextLine":"    fprintf(stderr, \"%s %s\", FormatFileLocation(file, line).c_str(),","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-typed-test.cc","lines":[95]}],"prevLine":"  const std::string& errors_str = errors.GetString();"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1026","currLine":"    sum += (case_list[i]->*method)();","cwe":190,"falseAlarm":false,"level":3,"message":"The 'sum' variable is incremented in the loop. Undefined behavior will occur in case of signed integer overflow.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[408]}],"prevLine":"  for (size_t i = 0; i < case_list.size(); i++) {","sastId":"CERT-INT32-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"void InsertSyntheticTestCase(const std::string& name, CodeLocation location,","falseAlarm":false,"level":2,"message":"Decreased performance. The 'location' argument should probably be rendered as a constant reference.","nextLine":"                             bool has_test_p) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[493]}],"prevLine":"// has not been marked as okay), emit a test case reporting that."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"                                        CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  GetUnitTestImpl()->type_parameterized_test_registry().RegisterTestSuite(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[538]}],"prevLine":"void RegisterTypeParameterizedTestSuite(const char* test_suite_name,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"  suites_.emplace(std::string(test_suite_name),","falseAlarm":false,"level":2,"message":"The 'emplace' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"                  TypeParameterizedTestSuiteInfo(code_location));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[550]}],"prevLine":"    const char* test_suite_name, CodeLocation code_location) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"    const char* test_suite_name, CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  suites_.emplace(std::string(test_suite_name),","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[549]}],"prevLine":"void TypeParameterizedTestSuiteRegistry::RegisterTestSuite("}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"      parsed.push_back(str.substr(pos));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'parsed' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"      break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1218]}],"prevLine":"    if (colon == ::std::string::npos) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"      parsed.push_back(str.substr(pos, colon - pos));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'parsed' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"      pos = colon + 1;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1221]}],"prevLine":"    } else {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_.push_back(std::make_pair(' ', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1380]}],"prevLine":"        FlushEdits();"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_removes_.push_back(std::make_pair('-', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_removes_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1384]}],"prevLine":"        ++removes_;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_adds_.push_back(std::make_pair('+', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_adds_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1388]}],"prevLine":"        ++adds_;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        lines.push_back(str.substr(start, i - start - 1));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'lines' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        start = i + 1;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1525]}],"prevLine":"      if (str[i] == 'n') {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"  lines.push_back(str.substr(start, end - start));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'lines' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  return lines;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1532]}],"prevLine":"  }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"TestResult::~TestResult() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2217]}],"prevLine":"// D'tor."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"  RecordProperty(key, value_message.GetString().c_str());","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting second argument of the function RecordProperty.","nextLine":"}","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2444]}],"prevLine":"  value_message << value;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V565","currLine":"    } catch (const AssertionException&) {  // NOLINT","cwe":544,"falseAlarm":false,"level":3,"message":"An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.","nextLine":"      // This failure was reported already.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2638]}],"prevLine":"      return HandleSehExceptionsInMethodIfSupported(object, method, location);","sastId":"CERT-ERR56-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"    const char* value_param, CodeLocation code_location,","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"    TypeId fixture_class_id, SetUpTestSuiteFunc set_up_tc,","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2753]}],"prevLine":"    const char* test_suite_name, const char* name, const char* type_param,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"                                CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  Message errors;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2764]}],"prevLine":"void ReportInvalidTestSuiteType(const char* test_suite_name,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V595","currLine":"    test->Run();","cwe":476,"falseAlarm":false,"level":1,"message":"The 'test' pointer was utilized before it was verified against nullptr. Check lines: 2855, 2858.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2855,2858]}],"prevLine":"    // exception handling code.","sastId":"CERT-EXP12-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      GetMutableTestInfo(i)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(i)'.","nextLine":"    } else {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3012]}],"prevLine":"    if (skip_all) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"        GetMutableTestInfo(j)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(j)'.","nextLine":"      }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3019]}],"prevLine":"      for (int j = i + 1; j < total_test_count(); j++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    GetMutableTestInfo(i)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(i)'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3057]}],"prevLine":"  for (int i = 0; i < total_test_count(); i++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V576","currLine":"    ColoredPrintf(GTestColor::kYellow, \"Note: This is test shard %d of %s.\\n\",","cwe":687,"falseAlarm":false,"level":3,"message":"Incorrect format. Consider checking the fourth actual argument of the 'ColoredPrintf' function. Under certain conditions the pointer can be null.","nextLine":"                  static_cast<int>(shard_index) + 1,","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3404]}],"prevLine":"    const int32_t shard_index = Int32FromEnvOrDie(kTestShardIndex, -1);","sastId":"CERT-DCL11-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V576","currLine":"    printf(\", where %s = %s\\n\", kTypeParamLabel, test_case.type_param());","cwe":687,"falseAlarm":false,"level":3,"message":"Incorrect format. Consider checking the third actual argument of the 'printf' function. Under certain conditions the pointer can be null.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3438]}],"prevLine":"  } else {","sastId":"CERT-DCL11-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V807","currLine":"  if (test_info.result()->Passed()) {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider creating a pointer to avoid using the 'test_info.result()' expression repeatedly.","nextLine":"    ColoredPrintf(GTestColor::kGreen, \"[       OK ] \");","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3488,3496,3500]}],"prevLine":"void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      const TestInfo& test_info = *test_suite.GetTestInfo(j);","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(j)'.","nextLine":"      if (!test_info.should_run() || !test_info.result()->Failed()) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3551]}],"prevLine":"    for (int j = 0; j < test_suite.total_test_count(); ++j) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      const TestInfo& test_info = *test_suite.GetTestInfo(j);","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(j)'.","nextLine":"      if (!test_info.should_run() || !test_info.result()->Skipped()) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3600]}],"prevLine":"    for (int j = 0; j < test_suite.total_test_count(); ++j) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(xmlout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(xmlout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3998]}],"prevLine":"  PrintXmlUnitTest(&stream, unit_test);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(xmlout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(xmlout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4007]}],"prevLine":"  PrintXmlTestsList(&stream, test_suites);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V814","currLine":"      segment = next_segment + strlen(\"]]>\");","falseAlarm":false,"level":1,"message":"Decreased performance. The 'strlen' function was called multiple times inside the body of a loop.","nextLine":"    } else {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4148]}],"prevLine":"      *stream << \"]]>]]&gt;<![CDATA[\";"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"                       test_info.value_param());","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.value_param()'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4224]}],"prevLine":"    OutputXmlAttribute(stream, kTestsuite, \"value_param\",","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"                       test_info.type_param());","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.type_param()'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4228]}],"prevLine":"    OutputXmlAttribute(stream, kTestsuite, \"type_param\",","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"              << EscapeXmlAttribute(summary.c_str()) << \"\\\">\";","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting first argument of the function EscapeXmlAttribute.","nextLine":"      const std::string detail = location + \"\\n\" + part.message();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4283]}],"prevLine":"      *stream << \"      <skipped message=\\\"\""}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    if (test_suite.GetTestInfo(i)->is_reportable())","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(i)'.","nextLine":"      OutputXmlTestInfo(stream, test_suite.name(), *test_suite.GetTestInfo(i));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4329]}],"prevLine":"  for (int i = 0; i < test_suite.total_test_count(); ++i) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(jsonout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(jsonout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4512]}],"prevLine":"  PrintJsonUnitTest(&stream, unit_test);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    OutputJsonKey(stream, kTestsuite, \"value_param\", test_info.value_param(),","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.value_param()'.","nextLine":"                  kIndent);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4672]}],"prevLine":"  if (test_info.value_param() != nullptr) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    OutputJsonKey(stream, kTestsuite, \"type_param\", test_info.type_param(),","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.type_param()'.","nextLine":"                  kIndent);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4676]}],"prevLine":"  if (test_info.type_param() != nullptr) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    if (test_suite.GetTestInfo(i)->is_reportable()) {","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(i)'.","nextLine":"      if (comma) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4768]}],"prevLine":"  for (int i = 0; i < test_suite.total_test_count(); ++i) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"      fwrite(\"0\", 1, 1, pfile);","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fwrite' function. Inspect the fourth argument.","nextLine":"      fclose(pfile);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5025]}],"prevLine":"      FILE* pfile = posix::FOpen(premature_exit_filepath_.c_str(), \"w\");","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V560","currLine":"  if (os_stack_trace.c_str() != nullptr && !os_stack_trace.empty()) {","cwe":571,"falseAlarm":false,"level":2,"message":"A part of conditional expression is always true: os_stack_trace.c_str() != nullptr.","nextLine":"    msg << internal::kStackTraceMarker << os_stack_trace;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5309]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  } else if (output_format != \"\") {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'output_format != \"\"' with '!output_format.empty()'.","nextLine":"    GTEST_LOG_(WARNING) << \"WARNING: unrecognized output format \\\"\"","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5596]}],"prevLine":"        UnitTestOptions::GetAbsolutePathToOutputFile().c_str()));"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"          GetMutableSuiteCase(test_index)->Run();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableSuiteCase(test_index)'.","nextLine":"          if (GTEST_FLAG_GET(fail_fast) &&","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5872]}],"prevLine":"             test_index++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"              GetMutableSuiteCase(j)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableSuiteCase(j)'.","nextLine":"            }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5876]}],"prevLine":"            for (int j = test_index + 1; j < total_test_suite_count(); j++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"    FILE* fileout = OpenFileForWriting(","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting first argument of the function OpenFileForWriting.","nextLine":"        UnitTestOptions::GetAbsolutePathToOutputFile().c_str());","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6157]}],"prevLine":"  if (output_format == \"xml\" || output_format == \"json\") {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"    fprintf(fileout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"    fclose(fileout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6169]}],"prevLine":"    }","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(color);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6539]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(catch_exceptions);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_use_fork);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6540]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(color);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6543]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(fail_fast);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6544]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(output);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(brief);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6546]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(stream_result_to);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(throw_on_failure);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6555]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(stack_trace_depth);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(color);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6539]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(catch_exceptions);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_use_fork);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6540]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(color);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6543]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(fail_fast);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6544]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(output);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(brief);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6546]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(stream_result_to);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(throw_on_failure);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6555]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(stack_trace_depth);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"  std::string contents(ReadEntireFile(flagfile));","cwe":628,"falseAlarm":false,"level":2,"message":"The 'flagfile' pointer was used unsafely after it was verified against nullptr. Check lines: 6563, 6567.","nextLine":"  posix::FClose(flagfile);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6567,6563]}],"prevLine":"  }","sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    g_argvs.push_back(StreamableToString(argv[i]));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'g_argvs' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6684]}],"prevLine":"  for (int i = 0; i != *argc; i++) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::successful_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'successful_test_case_count' function is fully equivalent to the body of 'successful_test_suite_count' function.","nextLine":"  return impl()->successful_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5170,5148]}],"prevLine":"#ifndef GTEST_REMOVE_LEGACY_TEST_CASEAPI_"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::failed_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'failed_test_case_count' function is fully equivalent to the body of 'failed_test_suite_count' function.","nextLine":"  return impl()->failed_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5173,5153]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::total_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'total_test_case_count' function is fully equivalent to the body of 'total_test_suite_count' function.","nextLine":"  return impl()->total_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5176,5158]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::test_case_to_run_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'test_case_to_run_count' function is fully equivalent to the body of 'test_suite_to_run_count' function.","nextLine":"  return impl()->test_suite_to_run_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5179,5164]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V730","currLine":"  explicit Mutex(StaticConstructorSelector /*dummy*/) {}","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: owner_thread_id_, type_, critical_section_init_phase_, critical_section_.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[1358]}],"prevLine":"  // ThreadSafeLazyInit() to lazily initialize the rest of the members.","sastId":"CERT-EXP53-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_start(ap, ...) __builtin_va_start(ap, 0)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[14]}],"prevLine":"/* C23 does not require the second parameter for va_start. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_start(ap, param) __builtin_va_start(ap, param)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[17]}],"prevLine":"/* Versions before C23 do require the second parameter. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_end(ap) __builtin_va_end(ap)","falseAlarm":false,"level":3,"message":"The 'va_end' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[19]}],"prevLine":"#endif","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","falseAlarm":false,"level":3,"message":"The 'va_arg' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[20]}],"prevLine":"#define va_end(ap) __builtin_va_end(ap)","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_copy(dest, src) __builtin_va_copy(dest, src)","falseAlarm":false,"level":3,"message":"The 'va_copy' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_copy.h","lines":[11]}],"prevLine":"#ifndef va_copy","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class GTEST_API_ RE {","falseAlarm":false,"level":2,"message":"The 'RE' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[891]}],"prevLine":"// Regular Expression syntax."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ThreadWithParam() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[1482]}],"prevLine":"      : ThreadWithParamBase(new RunnableImpl(func, param), thread_can_start) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  FilePath() : pathname_(\"\") {}","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'pathname_(\"\")' with 'pathname_()'.","nextLine":"  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) {}","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-filepath.h","lines":[66]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"    registered_tests_.insert(","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"        ::std::make_pair(test_name, CodeLocation(file, line)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[611]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    registered_tests_.insert(","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'registered_tests_' container. Consider replacing methods: 'insert' -> 'emplace'.","nextLine":"        ::std::make_pair(test_name, CodeLocation(file, line)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[611]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V783","currLine":"    return it->second;","cwe":119,"falseAlarm":false,"level":3,"message":"Dereferencing of the invalid iterator 'it' might take place.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[623]}],"prevLine":"    GTEST_CHECK_(it != registered_tests_.end());","sastId":"CERT-CTR51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V802","currLine":"class NativeArray {","falseAlarm":false,"level":2,"message":"On 32-bit platform, structure size can be reduced from 24 to 16 bytes by rearranging the fields according to their sizes in decreasing order.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[1097]}],"prevLine":"template <typename Element>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class NativeArray {","falseAlarm":false,"level":2,"message":"The 'NativeArray' class implements a copy constructor, but lacks the copy assignment operator. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-internal.h","lines":[1097]}],"prevLine":"template <typename Element>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  explicit Matcher() {}  // NOLINT","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[504]}],"prevLine":"  // cannot use it until a valid value has been assigned to it."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[533]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[555]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[583]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  Matcher() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-matchers.h","lines":[609]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  TestPartResultArray() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest-test-part.h","lines":[134]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ParamIteratorInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","nextLine":"  // A pointer to the base generator instance.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[97]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~ParamGeneratorInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[171]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~RangeGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[215]}],"prevLine":"        end_index_(CalculateEndIndex(begin, end, step)) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class RangeGenerator : public ParamGeneratorInterface<T> {","falseAlarm":false,"level":3,"message":"The copy assignment operator is declared as private in the 'RangeGenerator' class, but the default copy constructor will still be generated by compiler. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[208]}],"prevLine":"template <typename T, typename IncrementT>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"  class Iterator : public ParamIteratorInterface<T> {","falseAlarm":false,"level":2,"message":"The copy constructor is declared as private in the 'Iterator' class, but the default copy assignment operator will still be generated by compiler. It is dangerous to use such a class.","nextLine":"   public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[311]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~ValuesInIteratorRangeGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[299]}],"prevLine":"      : container_(begin, end) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V690","currLine":"class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {","falseAlarm":false,"level":3,"message":"The copy assignment operator is declared as private in the 'ValuesInIteratorRangeGenerator' class, but the default copy constructor will still be generated by compiler. It is dangerous to use such a class.","nextLine":" public:","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[294]}],"prevLine":"template <typename T>"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~TestMetaFactoryBase() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[420]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  TestMetaFactory() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty constructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[439]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V824","currLine":"    tests_.push_back(std::shared_ptr<TestInfo>(new TestInfo(","falseAlarm":false,"level":1,"message":"It is recommended to use the 'make_shared' function to create smart pointers.","nextLine":"        test_suite_name, test_base_name, meta_factory, code_location)));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[532]}],"prevLine":"                      CodeLocation code_location) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    instantiations_.push_back(","falseAlarm":false,"level":1,"message":"Decreased performance. Object may be created in-place in the 'instantiations_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        InstantiationInfo(instantiation_name, func, name_func, file, line));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[541]}],"prevLine":"                                const char* file, int line) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ParameterizedTestSuiteRegistry() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty constructor body.","nextLine":"  ~ParameterizedTestSuiteRegistry() {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[691]}],"prevLine":" public:"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  ~CartesianProductGenerator() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[830]}],"prevLine":"      : generators_(g) {}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"    ~IteratorImpl() override {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-param-util.h","lines":[855]}],"prevLine":"    }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"  virtual ~WithParamInterface() {}","falseAlarm":false,"level":3,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\gtest.h","lines":[1656]}],"prevLine":"  typedef T ParamType;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V601","currLine":"  AssertionResult negation(!success_);","cwe":704,"falseAlarm":false,"level":2,"message":"The bool type is implicitly cast to the class type.","nextLine":"  if (message_.get() != nullptr) negation << *message_;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-assertion-result.cc","lines":[62]}],"prevLine":"AssertionResult AssertionResult::operator!() const {","sastId":"CERT-INT36-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __builtin_va_list va_list;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'va_list' type. The system header file should be used: #include <STDARG.H> or <CRTDEFS.H>.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_list.h","lines":[12]}],"prevLine":"#define _VA_LIST","sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V659","currLine":"  const std::vector<TraceInfo>& gtest_trace_stack() const {","falseAlarm":false,"level":3,"message":"Declarations of functions with 'gtest_trace_stack' name differ in the 'const' keyword only, but the bodies of these functions have different composition. This is suspicious and can possibly be an error. Check lines: 770, 773.","nextLine":"    return gtest_trace_stack_.get();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-internal-inl.h","lines":[773,770]}],"prevLine":"  }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  if (GTEST_FLAG_GET(internal_run_death_test) == \"\") return nullptr;","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'str == \"\"' with 'str.empty()'.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-death-test.cc","lines":[1569]}],"prevLine":"InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V513","currLine":"    HANDLE thread_handle = ::CreateThread(","cwe":676,"falseAlarm":false,"level":3,"message":"Use _beginthreadex/_endthreadex functions instead of CreateThread/ExitThread functions.","nextLine":"        nullptr,  // Default security.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[430]}],"prevLine":"    DWORD thread_id;","sastId":"CERT-MSC24-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"          thread_to_thread_locals","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"              ->insert(std::make_pair(current_thread, ThreadLocalValues()))","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[505]}],"prevLine":"      thread_local_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"          thread_local_values","falseAlarm":false,"level":2,"message":"The 'insert' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"              .insert(std::make_pair(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[515]}],"prevLine":"      value_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"          thread_local_values","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'thread_local_values' container. Consider replacing methods: 'insert' -> 'emplace'.","nextLine":"              .insert(std::make_pair(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[515]}],"prevLine":"      value_pos ="}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V572","currLine":"        reinterpret_cast<LPVOID>(new ThreadIdAndHandle(thread_id, thread)),","cwe":665,"falseAlarm":false,"level":2,"message":"It is odd that the object which was created using 'new' operator is immediately cast to another type.","nextLine":"        CREATE_SUSPENDED, &watcher_thread_id);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[603]}],"prevLine":"        &ThreadLocalRegistryImpl::WatcherThreadFunc,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V513","currLine":"    HANDLE watcher_thread = ::CreateThread(","cwe":676,"falseAlarm":false,"level":3,"message":"Use _beginthreadex/_endthreadex functions instead of CreateThread/ExitThread functions.","nextLine":"        nullptr,  // Default security.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[599]}],"prevLine":"    DWORD watcher_thread_id;","sastId":"CERT-MSC24-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"  const size_t len = strlen(regex);","cwe":628,"falseAlarm":false,"level":2,"message":"The 'regex' pointer was used unsafely after it was verified against nullptr. Check lines: 944, 954.","nextLine":"  // Reserves enough bytes to hold the regular expression used for a","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[954,944]}],"sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V769","currLine":"    *buffer++ = '^';  // Makes sure full_pattern_ starts with '^'.","cwe":119,"falseAlarm":false,"level":2,"message":"The 'buffer' pointer in the 'buffer ++' expression could be nullptr. In such case, resulting value will be senseless and it should not be used. Check lines: 962, 958.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[962,958]}],"prevLine":"  if (*regex != '^')","sastId":"CERT-EXP08-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"    posix::FClose(file);","cwe":628,"falseAlarm":false,"level":2,"message":"The 'file' pointer was used unsafely after it was verified against nullptr. Check lines: 1129, 1134.","nextLine":"    return content;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[1134,1129]}],"prevLine":"    const std::string content = ReadEntireFile(file);","sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V560","currLine":"      result != long_value","cwe":570,"falseAlarm":false,"level":2,"message":"A part of conditional expression is always false: result != long_value.","nextLine":"      // The parsed value overflows as an int32_t.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-port.cc","lines":[1308]}],"prevLine":"      // LONG_MAX or LONG_MIN when the input overflows.)"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    name_vec.push_back(StripTrailingSpaces(GetPrefixUntilComma(src)));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'name_vec' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-typed-test.cc","lines":[50]}],"prevLine":"  for (; src != nullptr; src = SkipComma(src)) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  if (errors_str != \"\") {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'errors_str != \"\"' with '!errors_str.empty()'.","nextLine":"    fprintf(stderr, \"%s %s\", FormatFileLocation(file, line).c_str(),","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-typed-test.cc","lines":[95]}],"prevLine":"  const std::string& errors_str = errors.GetString();"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1026","currLine":"    sum += (case_list[i]->*method)();","cwe":190,"falseAlarm":false,"level":3,"message":"The 'sum' variable is incremented in the loop. Undefined behavior will occur in case of signed integer overflow.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[408]}],"prevLine":"  for (size_t i = 0; i < case_list.size(); i++) {","sastId":"CERT-INT32-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"void InsertSyntheticTestCase(const std::string& name, CodeLocation location,","falseAlarm":false,"level":2,"message":"Decreased performance. The 'location' argument should probably be rendered as a constant reference.","nextLine":"                             bool has_test_p) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[493]}],"prevLine":"// has not been marked as okay), emit a test case reporting that."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"                                        CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  GetUnitTestImpl()->type_parameterized_test_registry().RegisterTestSuite(","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[538]}],"prevLine":"void RegisterTypeParameterizedTestSuite(const char* test_suite_name,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V837","currLine":"  suites_.emplace(std::string(test_suite_name),","falseAlarm":false,"level":2,"message":"The 'emplace' function does not guarantee that arguments will not be copied or moved if there is no insertion. Consider using the 'try_emplace' function.","nextLine":"                  TypeParameterizedTestSuiteInfo(code_location));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[550]}],"prevLine":"    const char* test_suite_name, CodeLocation code_location) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"    const char* test_suite_name, CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  suites_.emplace(std::string(test_suite_name),","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[549]}],"prevLine":"void TypeParameterizedTestSuiteRegistry::RegisterTestSuite("}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"      parsed.push_back(str.substr(pos));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'parsed' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"      break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1218]}],"prevLine":"    if (colon == ::std::string::npos) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"      parsed.push_back(str.substr(pos, colon - pos));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'parsed' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"      pos = colon + 1;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1221]}],"prevLine":"    } else {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_.push_back(std::make_pair(' ', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1380]}],"prevLine":"        FlushEdits();"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_removes_.push_back(std::make_pair('-', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_removes_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1384]}],"prevLine":"        ++removes_;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        hunk_adds_.push_back(std::make_pair('+', line));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'hunk_adds_' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        break;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1388]}],"prevLine":"        ++adds_;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"        lines.push_back(str.substr(start, i - start - 1));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'lines' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"        start = i + 1;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1525]}],"prevLine":"      if (str[i] == 'n') {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"  lines.push_back(str.substr(start, end - start));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'lines' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  return lines;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[1532]}],"prevLine":"  }"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V832","currLine":"TestResult::~TestResult() {}","falseAlarm":false,"level":2,"message":"It's better to use '= default;' syntax instead of empty destructor body.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2217]}],"prevLine":"// D'tor."}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"  RecordProperty(key, value_message.GetString().c_str());","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting second argument of the function RecordProperty.","nextLine":"}","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2444]}],"prevLine":"  value_message << value;"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V565","currLine":"    } catch (const AssertionException&) {  // NOLINT","cwe":544,"falseAlarm":false,"level":3,"message":"An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.","nextLine":"      // This failure was reported already.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2638]}],"prevLine":"      return HandleSehExceptionsInMethodIfSupported(object, method, location);","sastId":"CERT-ERR56-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"    const char* value_param, CodeLocation code_location,","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"    TypeId fixture_class_id, SetUpTestSuiteFunc set_up_tc,","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2753]}],"prevLine":"    const char* test_suite_name, const char* name, const char* type_param,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V813","currLine":"                                CodeLocation code_location) {","falseAlarm":false,"level":2,"message":"Decreased performance. The 'code_location' argument should probably be rendered as a constant reference.","nextLine":"  Message errors;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2764]}],"prevLine":"void ReportInvalidTestSuiteType(const char* test_suite_name,"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V595","currLine":"    test->Run();","cwe":476,"falseAlarm":false,"level":1,"message":"The 'test' pointer was utilized before it was verified against nullptr. Check lines: 2855, 2858.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[2855,2858]}],"prevLine":"    // exception handling code.","sastId":"CERT-EXP12-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      GetMutableTestInfo(i)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(i)'.","nextLine":"    } else {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3012]}],"prevLine":"    if (skip_all) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"        GetMutableTestInfo(j)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(j)'.","nextLine":"      }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3019]}],"prevLine":"      for (int j = i + 1; j < total_test_count(); j++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    GetMutableTestInfo(i)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableTestInfo(i)'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3057]}],"prevLine":"  for (int i = 0; i < total_test_count(); i++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V576","currLine":"    ColoredPrintf(GTestColor::kYellow, \"Note: This is test shard %d of %s.\\n\",","cwe":687,"falseAlarm":false,"level":3,"message":"Incorrect format. Consider checking the fourth actual argument of the 'ColoredPrintf' function. Under certain conditions the pointer can be null.","nextLine":"                  static_cast<int>(shard_index) + 1,","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3404]}],"prevLine":"    const int32_t shard_index = Int32FromEnvOrDie(kTestShardIndex, -1);","sastId":"CERT-DCL11-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V576","currLine":"    printf(\", where %s = %s\\n\", kTypeParamLabel, test_case.type_param());","cwe":687,"falseAlarm":false,"level":3,"message":"Incorrect format. Consider checking the third actual argument of the 'printf' function. Under certain conditions the pointer can be null.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3438]}],"prevLine":"  } else {","sastId":"CERT-DCL11-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V807","currLine":"  if (test_info.result()->Passed()) {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider creating a pointer to avoid using the 'test_info.result()' expression repeatedly.","nextLine":"    ColoredPrintf(GTestColor::kGreen, \"[       OK ] \");","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3488,3496,3500]}],"prevLine":"void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      const TestInfo& test_info = *test_suite.GetTestInfo(j);","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(j)'.","nextLine":"      if (!test_info.should_run() || !test_info.result()->Failed()) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3551]}],"prevLine":"    for (int j = 0; j < test_suite.total_test_count(); ++j) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"      const TestInfo& test_info = *test_suite.GetTestInfo(j);","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(j)'.","nextLine":"      if (!test_info.should_run() || !test_info.result()->Skipped()) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3600]}],"prevLine":"    for (int j = 0; j < test_suite.total_test_count(); ++j) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(xmlout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(xmlout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[3998]}],"prevLine":"  PrintXmlUnitTest(&stream, unit_test);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(xmlout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(xmlout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4007]}],"prevLine":"  PrintXmlTestsList(&stream, test_suites);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V814","currLine":"      segment = next_segment + strlen(\"]]>\");","falseAlarm":false,"level":1,"message":"Decreased performance. The 'strlen' function was called multiple times inside the body of a loop.","nextLine":"    } else {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4148]}],"prevLine":"      *stream << \"]]>]]&gt;<![CDATA[\";"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"                       test_info.value_param());","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.value_param()'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4224]}],"prevLine":"    OutputXmlAttribute(stream, kTestsuite, \"value_param\",","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"                       test_info.type_param());","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.type_param()'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4228]}],"prevLine":"    OutputXmlAttribute(stream, kTestsuite, \"type_param\",","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"              << EscapeXmlAttribute(summary.c_str()) << \"\\\">\";","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting first argument of the function EscapeXmlAttribute.","nextLine":"      const std::string detail = location + \"\\n\" + part.message();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4283]}],"prevLine":"      *stream << \"      <skipped message=\\\"\""}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    if (test_suite.GetTestInfo(i)->is_reportable())","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(i)'.","nextLine":"      OutputXmlTestInfo(stream, test_suite.name(), *test_suite.GetTestInfo(i));","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4329]}],"prevLine":"  for (int i = 0; i < test_suite.total_test_count(); ++i) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"  fprintf(jsonout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"  fclose(jsonout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4512]}],"prevLine":"  PrintJsonUnitTest(&stream, unit_test);","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    OutputJsonKey(stream, kTestsuite, \"value_param\", test_info.value_param(),","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.value_param()'.","nextLine":"                  kIndent);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4672]}],"prevLine":"  if (test_info.value_param() != nullptr) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    OutputJsonKey(stream, kTestsuite, \"type_param\", test_info.type_param(),","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_info.type_param()'.","nextLine":"                  kIndent);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4676]}],"prevLine":"  if (test_info.type_param() != nullptr) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"    if (test_suite.GetTestInfo(i)->is_reportable()) {","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'test_suite.GetTestInfo(i)'.","nextLine":"      if (comma) {","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[4768]}],"prevLine":"  for (int i = 0; i < test_suite.total_test_count(); ++i) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"      fwrite(\"0\", 1, 1, pfile);","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fwrite' function. Inspect the fourth argument.","nextLine":"      fclose(pfile);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5025]}],"prevLine":"      FILE* pfile = posix::FOpen(premature_exit_filepath_.c_str(), \"w\");","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V560","currLine":"  if (os_stack_trace.c_str() != nullptr && !os_stack_trace.empty()) {","cwe":571,"falseAlarm":false,"level":2,"message":"A part of conditional expression is always true: os_stack_trace.c_str() != nullptr.","nextLine":"    msg << internal::kStackTraceMarker << os_stack_trace;","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5309]}]}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V815","currLine":"  } else if (output_format != \"\") {","falseAlarm":false,"level":3,"message":"Decreased performance. Consider replacing the expression 'output_format != \"\"' with '!output_format.empty()'.","nextLine":"    GTEST_LOG_(WARNING) << \"WARNING: unrecognized output format \\\"\"","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5596]}],"prevLine":"        UnitTestOptions::GetAbsolutePathToOutputFile().c_str()));"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"          GetMutableSuiteCase(test_index)->Run();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableSuiteCase(test_index)'.","nextLine":"          if (GTEST_FLAG_GET(fail_fast) &&","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5872]}],"prevLine":"             test_index++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V522","currLine":"              GetMutableSuiteCase(j)->Skip();","cwe":690,"falseAlarm":false,"level":3,"message":"There might be dereferencing of a potential null pointer 'GetMutableSuiteCase(j)'.","nextLine":"            }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5876]}],"prevLine":"            for (int j = test_index + 1; j < total_test_suite_count(); j++) {","sastId":"CERT-MEM52-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V811","currLine":"    FILE* fileout = OpenFileForWriting(","falseAlarm":false,"level":1,"message":"Decreased performance. Excessive type casting: string -> char * -> string. Consider inspecting first argument of the function OpenFileForWriting.","nextLine":"        UnitTestOptions::GetAbsolutePathToOutputFile().c_str());","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6157]}],"prevLine":"  if (output_format == \"xml\" || output_format == \"json\") {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V575","currLine":"    fprintf(fileout, \"%s\", StringStreamToString(&stream).c_str());","cwe":628,"falseAlarm":false,"level":3,"message":"The potential null pointer is passed into 'fprintf' function. Inspect the first argument.","nextLine":"    fclose(fileout);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6169]}],"prevLine":"    }","sastId":"CERT-EXP37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(color);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6539]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(catch_exceptions);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_use_fork);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6540]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(color);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6543]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(fail_fast);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6544]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(output);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(brief);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6546]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V836","currLine":"  GTEST_INTERNAL_PARSE_FLAG(stream_result_to);","falseAlarm":false,"level":1,"message":"Expression's value is copied at the 'value' variable declaration. The variable is never modified.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(throw_on_failure);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6555]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(stack_trace_depth);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(color);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6539]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(catch_exceptions);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_style);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(death_test_use_fork);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6540]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(color);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6543]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(fail_fast);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(internal_run_death_test);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6544]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(filter);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(output);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(brief);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6546]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(list_tests);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V820","currLine":"  GTEST_INTERNAL_PARSE_FLAG(stream_result_to);","falseAlarm":false,"level":2,"message":"The 'value' variable is not used after copying. Copying can be replaced with move/swap for optimization.","nextLine":"  GTEST_INTERNAL_PARSE_FLAG(throw_on_failure);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6555]}],"prevLine":"  GTEST_INTERNAL_PARSE_FLAG(stack_trace_depth);"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1004","currLine":"  std::string contents(ReadEntireFile(flagfile));","cwe":628,"falseAlarm":false,"level":2,"message":"The 'flagfile' pointer was used unsafely after it was verified against nullptr. Check lines: 6563, 6567.","nextLine":"  posix::FClose(flagfile);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6567,6563]}],"prevLine":"  }","sastId":"CERT-EXP34-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V823","currLine":"    g_argvs.push_back(StreamableToString(argv[i]));","falseAlarm":false,"level":2,"message":"Decreased performance. Object may be created in-place in the 'g_argvs' container. Consider replacing methods: 'push_back' -> 'emplace_back'.","nextLine":"  }","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[6684]}],"prevLine":"  for (int i = 0; i != *argc; i++) {"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::successful_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'successful_test_case_count' function is fully equivalent to the body of 'successful_test_suite_count' function.","nextLine":"  return impl()->successful_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5170,5148]}],"prevLine":"#ifndef GTEST_REMOVE_LEGACY_TEST_CASEAPI_"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::failed_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'failed_test_case_count' function is fully equivalent to the body of 'failed_test_suite_count' function.","nextLine":"  return impl()->failed_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5173,5153]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::total_test_case_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'total_test_case_count' function is fully equivalent to the body of 'total_test_suite_count' function.","nextLine":"  return impl()->total_test_suite_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5176,5158]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V524","currLine":"int UnitTest::test_case_to_run_count() const {","falseAlarm":false,"level":3,"message":"It is odd that the body of 'test_case_to_run_count' function is fully equivalent to the body of 'test_suite_to_run_count' function.","nextLine":"  return impl()->test_suite_to_run_count();","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest.cc","lines":[5179,5164]}],"prevLine":"}"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V730","currLine":"  explicit Mutex(StaticConstructorSelector /*dummy*/) {}","cwe":457,"falseAlarm":false,"level":2,"message":"Not all members of a class are initialized inside the constructor. Consider inspecting: owner_thread_id_, type_, critical_section_init_phase_, critical_section_.","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\include\\gtest\\internal\\gtest-port.h","lines":[1358]}],"prevLine":"  // ThreadSafeLazyInit() to lazily initialize the rest of the members.","sastId":"CERT-EXP53-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_start(ap, ...) __builtin_va_start(ap, 0)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[14]}],"prevLine":"/* C23 does not require the second parameter for va_start. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_start(ap, param) __builtin_va_start(ap, param)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[17]}],"prevLine":"/* Versions before C23 do require the second parameter. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_end(ap) __builtin_va_end(ap)","falseAlarm":false,"level":3,"message":"The 'va_end' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[19]}],"prevLine":"#endif","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","falseAlarm":false,"level":3,"message":"The 'va_arg' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[20]}],"prevLine":"#define va_end(ap) __builtin_va_end(ap)","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\googletest\\c89ee04fa01138c2db034b2627b51a145ba09878\\googletest\\googletest\\src\\gtest-all.cc"],"code":"V1059","currLine":"#define va_copy(dest, src) __builtin_va_copy(dest, src)","falseAlarm":false,"level":3,"message":"The 'va_copy' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_copy.h","lines":[11]}],"prevLine":"#ifndef va_copy","sastId":"CERT-DCL51-CPP"}
