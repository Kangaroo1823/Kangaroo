{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V677","currLine":"typedef __builtin_va_list va_list;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'va_list' type. The system header file should be used: #include <STDARG.H> or <CRTDEFS.H>.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_list.h","lines":[12]}],"prevLine":"#define _VA_LIST","sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V677","currLine":"typedef __PTRDIFF_TYPE__ ptrdiff_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'ptrdiff_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_ptrdiff_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V677","currLine":"typedef __SIZE_TYPE__ size_t;","falseAlarm":false,"level":2,"message":"Custom declaration of a standard 'size_t' type. The system header file should be used: #include <CRTDEFS.H>.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_size_t.h","lines":[18]}],"sastId":"CERT-DCL37-C"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1061","currLine":"namespace std {","falseAlarm":false,"level":2,"message":"Extending the 'std' namespace may result in undefined behavior.","nextLine":"typedef decltype(nullptr) nullptr_t;","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stddef_nullptr_t.h","lines":[20]}],"prevLine":"#if defined(_MSC_EXTENSIONS) && defined(_NATIVE_NULLPTR_SUPPORTED)","sastId":"CERT-DCL58-CPP"}
{"code":"V824","currLine":"  std::unique_ptr<char[]> buff(new char[size]);","falseAlarm":false,"level":1,"message":"It is recommended to use the 'make_unique' function to create smart pointers.","nextLine":"  ret = vsnprintf(buff.get(), size, msg, args);","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc","lines":[109]}],"prevLine":"  size = static_cast<size_t>(ret) + 1;  // + 1 for the null byte"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define va_start(ap, ...) __builtin_va_start(ap, 0)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[14]}],"prevLine":"/* C23 does not require the second parameter for va_start. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define va_start(ap, param) __builtin_va_start(ap, param)","falseAlarm":false,"level":3,"message":"The 'va_start' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[17]}],"prevLine":"/* Versions before C23 do require the second parameter. */","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define va_end(ap) __builtin_va_end(ap)","falseAlarm":false,"level":3,"message":"The 'va_end' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[19]}],"prevLine":"#endif","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define va_arg(ap, type) __builtin_va_arg(ap, type)","falseAlarm":false,"level":3,"message":"The 'va_arg' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_arg.h","lines":[20]}],"prevLine":"#define va_end(ap) __builtin_va_end(ap)","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define va_copy(dest, src) __builtin_va_copy(dest, src)","falseAlarm":false,"level":3,"message":"The 'va_copy' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#endif","positions":[{"file":"C:\\Program Files\\clang+llvm-19.1.6\\lib\\clang\\19\\include\\__stdarg_va_copy.h","lines":[11]}],"prevLine":"#ifndef va_copy","sastId":"CERT-DCL51-CPP"}
{"analyzedSourceFiles":["C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\colorprint.cc"],"code":"V1059","currLine":"#define __func__ __FUNCTION__","falseAlarm":false,"level":3,"message":"The '__func__' macro name overrides a reserved name from C standard. This may lead to undefined behavior.","nextLine":"#else","positions":[{"file":"C:\\Users\\U439644\\CLionProjects\\Kangaroo\\cpm_source_cache\\benchmark\\c3c774aafe0a92dc49ddae04e9756335909005cc\\benchmark\\src\\check.h","lines":[23]}],"prevLine":"#endif","sastId":"CERT-DCL51-CPP"}
